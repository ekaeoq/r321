{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { styles } from \"./styleApp.js\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport AnimatedTyping from \"./AnimatedTyping.js\";\nimport { spotifyCredentials } from \"./secrets\";\nimport SpotifyWebAPI from 'spotify-web-api-js';\nimport * as WebBrowser from 'expo-web-browser';\nimport { makeRedirectUri, useAuthRequest } from 'expo-auth-session';\nimport { encode as btoa } from 'base-64';\nimport axios from 'axios';\nvar scopesArr = ['user-modify-playback-state'];\nvar scopes = scopesArr.join(' ');\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ScreenOne = function ScreenOne(props) {\n  var onPress = function onPress() {\n    props.navigation.navigate('ScreenTwo');\n  };\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.Header,\n      children: \"How bad is your music taste?\"\n    }), _jsx(\"img\", {\n      style: styles.album_2,\n      src: require(\"./empty_vinyl.png\")\n    }), _jsx(Button, {\n      color: \"#000000\",\n      title: \"Find Out!\"\n      ,\n      onPress: onPress\n    }), _jsx(Text, {\n      style: styles.bottomTextLeft,\n      children: \"Project by Timotej, Viktor and Merisa\"\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n};\n\nvar ScreenTwo = function ScreenTwo(props) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    shouldShow = _useState2[0],\n    setShouldShow = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showButton = _useState4[0],\n    setShowButton = _useState4[1];\n  var next = function next() {\n    props.navigation.navigate('ScreenThree');\n  };\n  return _jsxs(View, {\n    style: styles.screen2,\n    children: [_jsx(AnimatedTyping, {\n      text: [\"Hi i am an AI programmed, to judge your music taste bla bla bla ...\"],\n      onComplete: function onComplete() {\n        return setShowButton(true);\n      }\n    }), showButton ? _jsxs(Pressable, {\n      style: styles.button2Style,\n      onPress: function onPress() {\n        return setShouldShow(!shouldShow);\n      },\n      children: [\" \", _jsx(Text, {\n        style: {\n          color: \"white\"\n        },\n        children: \"show component\"\n      }), \" \"]\n    }) : null, showButton ? _jsx(Pressable, {\n      style: styles.button2Style,\n      onPress: next,\n      children: _jsx(Text, {\n        style: {\n          color: \"white\"\n        },\n        children: \"log in with spotify\"\n      })\n    }) : null, shouldShow ? _jsx(AnimatedTyping, {\n      text: [\"Hi i am an AI programmed, to judge your music taste bla bla bla ...\"]\n    }) : null]\n  });\n};\n\nvar ScreenThree = function ScreenThree(props) {\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    shouldShowText = _useState6[0],\n    sethouldShowText = _useState6[1];\n\n  var back = function back() {\n    props.navigation.navigate('Music Judger');\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: [_jsx(AnimatedTyping, {\n      text: [\"text text loading blablabla\"],\n      onComplete: function onComplete() {\n        return sethouldShowText(true);\n      }\n    }), shouldShowText ? _jsx(AnimatedTyping, {\n      text: [\"drugi text blabla\"]\n    }) : null, _jsx(Button, {\n      style: styles.buttomStyle,\n      title: \"back\",\n      color: \"#000000\",\n      onPress: back\n    })]\n  });\n};\nvar App = function App() {\n  var Stack = createStackNavigator();\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Music Judger\",\n        component: ScreenOne\n      }), _jsx(Stack.Screen, {\n        name: \"ScreenTwo\",\n        component: ScreenTwo\n      }), _jsx(Stack.Screen, {\n        name: \"ScreenThree\",\n        component: ScreenThree\n      })]\n    })\n  });\n};\nvar discovery = {\n  authorizationEndpoint: 'https://accounts.spotify.com/authorize',\n  tokenEndpoint: 'https://accounts.spotify.com/api/token'\n};\nWebBrowser.maybeCompleteAuthSession();\nexport var getUserPlaylists = function () {\n  var _ref = _asyncToGenerator(function* () {\n    var sp = yield getValidSPObj();\n    var _yield$sp$getMe = yield sp.getMe(),\n      userId = _yield$sp$getMe.id;\n    console.log(userId);\n    var _yield$sp$getUserPlay = yield sp.getUserPlaylists(userId, {\n        limit: 50\n      }),\n      playlists = _yield$sp$getUserPlay.items;\n    return playlists;\n  });\n  return function getUserPlaylists() {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar getAuthorizationCode = function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    try {\n      var redirectUrl = AuthSession.makeRedirectUri();\n      var url = 'https://accounts.spotify.com/authorize' + '?response_type=code' + '&client_id=' + spotifyCredentials.clientId + (scopes ? '&scope=' + encodeURIComponent(scopes) : '') + '&redirect_uri=' + encodeURIComponent(redirectUrl);\n      console.log(url);\n      WebBrowser.maybeCompleteAuthSession();\n      var _result = yield AuthSession.startAsync({\n        authUrl: url\n      });\n    } catch (err) {\n      console.error(err);\n    }\n    return result.params.code;\n  });\n  return function getAuthorizationCode() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getValidSPObj = function () {\n  var _ref3 = _asyncToGenerator(function* () {\n    var tokenExpirationTime = yield getUserData('expirationTime');\n    if (new Date().getTime() > tokenExpirationTime) {\n      yield refreshTokens();\n    }\n    var accessToken = yield getUserData('accessToken');\n    var sp = new SpotifyWebAPI();\n    yield sp.setAccessToken(accessToken);\n    return sp;\n  });\n  return function getValidSPObj() {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar getTokens = function () {\n  var _ref4 = _asyncToGenerator(function* () {\n    try {\n      var authorizationCode = yield getAuthorizationCode();\n      var credsB64 = btoa(spotifyCredentials.clientId + \":\" + spotifyCredentials.clientSecret);\n      var response = yield fetch('https://accounts.spotify.com/api/token', {\n        method: 'POST',\n        headers: {\n          Authorization: \"Basic \" + credsB64,\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: \"grant_type=authorization_code&code=\" + authorizationCode + \"&redirect_uri=\" + spotifyCredentials.redirectUri\n      });\n      var responseJson = yield response.json();\n      var accessToken = responseJson.access_token,\n        refreshToken = responseJson.refresh_token,\n        expiresIn = responseJson.expires_in;\n      var _expirationTime = new Date().getTime() + expiresIn * 1000;\n      yield setUserData('accessToken', accessToken);\n      yield setUserData('refreshToken', refreshToken);\n      yield setUserData('expirationTime', _expirationTime);\n    } catch (err) {\n      console.error(err);\n    }\n  });\n  return function getTokens() {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexport var refreshTokens = function () {\n  var _ref5 = _asyncToGenerator(function* () {\n    try {\n      var credsB64 = btoa(spotifyCredentials.clientId + \":\" + spotifyCredentials.clientSecret);\n      var refreshToken = yield getUserData('refreshToken');\n      var response = yield fetch('https://accounts.spotify.com/api/token', {\n        method: 'POST',\n        headers: {\n          Authorization: \"Basic \" + credsB64,\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: \"grant_type=refresh_token&refresh_token=\" + refreshToken\n      });\n      var responseJson = yield response.json();\n      if (responseJson.error) {\n        yield getTokens();\n      } else {\n        var newAccessToken = responseJson.access_token,\n          newRefreshToken = responseJson.refresh_token,\n          expiresIn = responseJson.expires_in;\n        var _expirationTime2 = new Date().getTime() + expiresIn * 1000;\n        yield setUserData('accessToken', newAccessToken);\n        if (newRefreshToken) {\n          yield setUserData('refreshToken', newRefreshToken);\n        }\n      }\n      yield setUserData('expirationTime', expirationTime);\n    } catch (err) {\n      console.error(err);\n    }\n  });\n  return function refreshTokens() {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport default App;","map":{"version":3,"names":["React","useState","StatusBar","styles","AnimatedTyping","spotifyCredentials","SpotifyWebAPI","WebBrowser","makeRedirectUri","useAuthRequest","encode","btoa","axios","scopesArr","scopes","join","NavigationContainer","createStackNavigator","ScreenOne","props","onPress","navigation","navigate","container","Header","album_2","require","bottomTextLeft","ScreenTwo","shouldShow","setShouldShow","showButton","setShowButton","next","screen2","button2Style","color","ScreenThree","shouldShowText","sethouldShowText","back","flex","justifyContent","alignItems","buttomStyle","App","Stack","headerShown","discovery","authorizationEndpoint","tokenEndpoint","maybeCompleteAuthSession","getUserPlaylists","sp","getValidSPObj","getMe","userId","id","console","log","limit","playlists","items","getAuthorizationCode","redirectUrl","AuthSession","url","clientId","encodeURIComponent","result","startAsync","authUrl","err","error","params","code","tokenExpirationTime","getUserData","Date","getTime","refreshTokens","accessToken","setAccessToken","getTokens","authorizationCode","credsB64","clientSecret","response","fetch","method","headers","Authorization","body","redirectUri","responseJson","json","access_token","refreshToken","refresh_token","expiresIn","expires_in","expirationTime","setUserData","newAccessToken","newRefreshToken"],"sources":["D:/DOKUMENTI/Faks/r321/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { styles } from './styleApp.js';\r\nimport {View, Text, StyleSheet, TouchableOpacity, SafeAreaView, Button, Pressable } from 'react-native';\r\nimport AnimatedTyping from './AnimatedTyping.js';\r\nimport { spotifyCredentials } from './secrets';\r\nimport SpotifyWebAPI from 'spotify-web-api-js';\r\nimport * as WebBrowser from 'expo-web-browser';\r\n//import * as AuthSession from 'expo-auth-session';\r\nimport { makeRedirectUri, useAuthRequest } from 'expo-auth-session';\r\nimport { encode as btoa } from 'base-64';\r\nimport axios from 'axios';\r\n//the scope for our analytics\r\nconst scopesArr = ['user-modify-playback-state'];\r\nconst scopes = scopesArr.join(' ');\r\n//Navigation import\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {createStackNavigator} from '@react-navigation/stack';\r\n\r\n\r\n//Screen One\r\nconst ScreenOne = props => {\r\n\r\n  //onPress To Navigate\r\n  const onPress = () => {\r\n    props.navigation.navigate('ScreenTwo');\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n        <Text style={styles.Header}>How bad is your music taste?</Text>\r\n        \r\n  \r\n        <img\r\n          style={styles.album_2}\r\n          src={require(\"./empty_vinyl.png\")}\r\n        />\r\n        <Button \r\n          color={\"#000000\"}\r\n          title=\"Find Out!\"\r\n          //color={\"#000000\"}\r\n          onPress={onPress}>\r\n        </Button>\r\n  \r\n        <Text style={styles.bottomTextLeft}>Project by Timotej, Viktor and Merisa</Text>\r\n  \r\n        <StatusBar style=\"auto\" /> \r\n      </SafeAreaView>\r\n  );\r\n};\r\n\r\n\r\n\r\n//Screen Two\r\nconst ScreenTwo = props => {\r\n\r\n  const [shouldShow, setShouldShow] = useState(false);//false \r\n  const [showButton, setShowButton] = useState(false);\r\n\r\n\r\n  const next = () => {\r\n    props.navigation.navigate('ScreenThree');\r\n  };\r\n  return (\r\n    <View style={styles.screen2}>\r\n\r\n      <AnimatedTyping text={[\"Hi i am an AI programmed, to judge your music taste bla bla bla ...\"]} onComplete={() => setShowButton(true)}/>\r\n\r\n      \r\n\r\n      {showButton ? (\r\n          <Pressable \r\n          style={styles.button2Style}\r\n          \r\n          onPress={() => setShouldShow(!shouldShow)}\r\n        > <Text style={{color: \"white\"}}>show component</Text> </Pressable>\r\n      ) : null}\r\n\r\n      {showButton ? (\r\n          <Pressable  \r\n          style={styles.button2Style}\r\n          \r\n          onPress={next}><Text style={{color: \"white\"}}>log in with spotify</Text>\r\n      </Pressable >\r\n      ) : null}\r\n\r\n      {shouldShow ? (\r\n        <AnimatedTyping text={[\"Hi i am an AI programmed, to judge your music taste bla bla bla ...\"] } />\r\n      ) : null}\r\n          \r\n    </View>\r\n  );\r\n};\r\n\r\n/*export default function App() {\r\n  const [request, response, promptAsync] = useAuthRequest(\r\n    {\r\n      clientId: spotifyCredentials.clientId,\r\n      scopes: ['user-modify-playback-state','user-read-currently-playing','user-read-playback-state','user-library-modify',\r\n      'user-library-read','playlist-read-private','playlist-read-collaborative','playlist-modify-public',\r\n      'playlist-modify-private','user-read-recently-played','user-top-read'],\r\n      // In order to follow the \"Authorization Code Flow\" to fetch token after authorizationEndpoint\r\n      // this must be set to false\r\n      usePKCE: false,\r\n      redirectUri: makeRedirectUri({\r\n        scheme: 'app'\r\n      }),\r\n    },\r\n    discovery\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (response?.type === 'success') {\r\n      const { code } = response.params;\r\n    }\r\n  }, [response]);\r\n  return (\r\n    \r\n    <SafeAreaView style={styles.container}>\r\n      <AnimatedTyping text={[\"Hello there fellow music enthusiast!\",\"\", \"Are you prepared to hand over your deepest darkest listening pleasures to a mere AI machine?\", \"Don't worry, we won't tell anyone if you won't ;)\"]} />\r\n      \r\n      <Button \r\n        title=\"Log in!\"\r\n        color={\"#00734237\"}\r\n        onPress={() => {\r\n          promptAsync();\r\n          \r\n        }}>\r\n      </Button>\r\n\r\n      <StatusBar style=\"auto\" /> \r\n    </SafeAreaView>\r\n  );\r\n  \r\n}*/\r\n\r\n//Screen Three\r\nconst ScreenThree = props => {\r\n\r\n  const [shouldShowText, sethouldShowText] = useState(false);//false \r\n\r\n  const back = () => {\r\n    props.navigation.navigate('Music Judger');\r\n  };\r\n  return (\r\n    <View style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\r\n\r\n      <AnimatedTyping text={[\"text text loading blablabla\"]} onComplete={() => sethouldShowText(true)}/>\r\n\r\n      {shouldShowText ? (\r\n        <AnimatedTyping text={[\"drugi text blabla\"] } />\r\n      ) : null}\r\n\r\n      <Button \r\n          style={styles.buttomStyle}\r\n          title=\"back\"\r\n          color={\"#000000\"}\r\n          onPress={back}>\r\n        </Button>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  const Stack = createStackNavigator();\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator\r\n        screenOptions={{\r\n        headerShown: false //nastavljanje headerja\r\n        }}\r\n      >\r\n        <Stack.Screen name=\"Music Judger\" component={ScreenOne} />\r\n        <Stack.Screen name=\"ScreenTwo\" component={ScreenTwo} />\r\n        <Stack.Screen name=\"ScreenThree\" component={ScreenThree} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nconst discovery = {\r\n  authorizationEndpoint: 'https://accounts.spotify.com/authorize',\r\n  tokenEndpoint: 'https://accounts.spotify.com/api/token',\r\n};\r\n\r\nWebBrowser.maybeCompleteAuthSession();\r\n\r\n\r\nexport const getUserPlaylists = async () => {\r\n  const sp = await getValidSPObj();\r\n  const { id: userId } = await sp.getMe();\r\n  console.log(userId);\r\n  const { items: playlists } = await sp.getUserPlaylists(userId, { limit: 50 });\r\n  return playlists;\r\n};\r\n//step 1\r\nconst getAuthorizationCode = async () => {\r\ntry { \r\n    const redirectUrl = AuthSession.makeRedirectUri();\r\n    let url=\r\n    'https://accounts.spotify.com/authorize' +\r\n    '?response_type=code' +\r\n    '&client_id=' +\r\n    spotifyCredentials.clientId +\r\n    (scopes ? '&scope=' + encodeURIComponent(scopes) : '') +\r\n    '&redirect_uri=' +\r\n    encodeURIComponent(redirectUrl);\r\n    console.log(url);\r\n    WebBrowser.maybeCompleteAuthSession();\r\n    const result = await AuthSession.startAsync({  authUrl:url  })\r\n    \r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n  return result.params.code\r\n}\r\n\r\n\r\nexport const getValidSPObj = async () => {\r\n  const tokenExpirationTime = await getUserData('expirationTime');\r\n  if (new Date().getTime() > tokenExpirationTime) {\r\n    // access token has expired, so we need to use the refresh token\r\n    await refreshTokens();\r\n  }\r\n  const accessToken = await getUserData('accessToken');\r\n  var sp = new SpotifyWebAPI();\r\n  await sp.setAccessToken(accessToken);\r\n  return sp;\r\n}\r\n\r\n//step 2: create access token and refresh token\r\nconst getTokens = async () => {\r\n  try {\r\n    const authorizationCode = await getAuthorizationCode() //we wrote this function above\r\n    const credsB64 = btoa(`${spotifyCredentials.clientId}:${spotifyCredentials.clientSecret}`);\r\n    const response = await fetch('https://accounts.spotify.com/api/token', {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Basic ${credsB64}`,\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: `grant_type=authorization_code&code=${authorizationCode}&redirect_uri=${\r\n        spotifyCredentials.redirectUri\r\n      }`,\r\n    });\r\n    const responseJson = await response.json();\r\n    \r\n    const {\r\n      access_token: accessToken,\r\n      refresh_token: refreshToken,\r\n      expires_in: expiresIn,\r\n    } = responseJson;\r\n\r\n    const expirationTime = new Date().getTime() + expiresIn * 1000;\r\n    await setUserData('accessToken', accessToken);\r\n    await setUserData('refreshToken', refreshToken);\r\n    await setUserData('expirationTime', expirationTime);\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\n\r\n//step 3: refresh the token (since the tokens from step 2 have a lifespan)\r\n\r\nexport const refreshTokens = async () => {\r\n  try { \r\n    const credsB64 = btoa(`${spotifyCredentials.clientId}:${spotifyCredentials.clientSecret}`);\r\n    const refreshToken = await getUserData('refreshToken');\r\n    const response = await fetch('https://accounts.spotify.com/api/token', {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Basic ${credsB64}`,\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: `grant_type=refresh_token&refresh_token=${refreshToken}`,\r\n    });\r\n    const responseJson = await response.json();\r\n    if (responseJson.error) {\r\n      await getTokens();\r\n    } else {\r\n      const {\r\n        access_token: newAccessToken,\r\n        refresh_token: newRefreshToken,\r\n        expires_in: expiresIn,\r\n      } = responseJson;\r\n\r\n      const expirationTime = new Date().getTime() + expiresIn * 1000;\r\n      await setUserData('accessToken', newAccessToken);\r\n      if (newRefreshToken) {\r\n        await setUserData('refreshToken', newRefreshToken);\r\n      }\r\n   \r\n       }   await setUserData('expirationTime', expirationTime);\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}