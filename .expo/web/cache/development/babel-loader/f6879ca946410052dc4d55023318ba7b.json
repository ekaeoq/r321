{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { styles } from \"./styleApp.js\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport AnimatedTyping from \"./AnimatedTyping.js\";\nimport { spotifyCredentials } from \"./secrets\";\nimport SpotifyWebAPI from 'spotify-web-api-js';\nimport * as WebBrowser from 'expo-web-browser';\nimport { makeRedirectUri, useAuthRequest } from 'expo-auth-session';\nimport { encode as btoa } from 'base-64';\nimport axios from 'axios';\nvar scopesArr = ['user-modify-playback-state'];\nvar scopes = scopesArr.join(' ');\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ScreenOne = function ScreenOne(props) {\n  var onPress = function onPress() {\n    props.navigation.navigate('ScreenTwo');\n  };\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.Header,\n      children: \"How bad is your music taste?\"\n    }), _jsx(\"img\", {\n      style: styles.album_2,\n      src: require(\"./empty_vinyl.png\")\n    }), _jsx(Button, {\n      color: \"#000000\",\n      title: \"Find Out!\"\n      ,\n      onPress: onPress\n    }), _jsx(Text, {\n      style: styles.bottomTextLeft,\n      children: \"Project by Timotej, Viktor and Merisa\"\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n};\n\nvar ScreenTwo = function ScreenTwo(props) {\n  var _useAuthRequest = useAuthRequest({\n      clientId: spotifyCredentials.clientId,\n      scopes: ['user-modify-playback-state', 'user-read-currently-playing', 'user-read-playback-state', 'user-library-modify', 'user-library-read', 'playlist-read-private', 'playlist-read-collaborative', 'playlist-modify-public', 'playlist-modify-private', 'user-read-recently-played', 'user-top-read'],\n      usePKCE: false,\n      redirectUri: makeRedirectUri({\n        scheme: 'app'\n      })\n    }, discovery),\n    _useAuthRequest2 = _slicedToArray(_useAuthRequest, 3),\n    request = _useAuthRequest2[0],\n    response = _useAuthRequest2[1],\n    promptAsync = _useAuthRequest2[2];\n  React.useEffect(function () {\n    if ((response == null ? void 0 : response.type) === 'success') {\n      var accessToken = response.params.accessToken;\n      console.log(\"sjfkswe\");\n    }\n  }, [response]);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    shouldShow = _useState2[0],\n    setShouldShow = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showButton = _useState4[0],\n    setShowButton = _useState4[1];\n  var next = function next() {\n    props.navigation.navigate('ScreenThree');\n    promptAsync();\n  };\n  return _jsxs(View, {\n    style: styles.screen2,\n    children: [_jsx(AnimatedTyping, {\n      text: [\"Hello there fellow music enthusiast!\", \"\", \";)\"],\n      onComplete: function onComplete() {\n        return setShowButton(true);\n      }\n    }), showButton ? _jsxs(Pressable, {\n      style: styles.button2Style,\n      onPress: function onPress() {\n        return setShouldShow(!shouldShow);\n      },\n      children: [\" \", _jsx(Text, {\n        style: {\n          color: \"white\"\n        },\n        children: \"show component\"\n      }), \" \"]\n    }) : null, showButton ? _jsx(Pressable, {\n      style: styles.button2Style,\n      onPress: next,\n      children: _jsx(Text, {\n        style: {\n          color: \"white\"\n        },\n        children: \"log in with spotify\"\n      })\n    }) : null, shouldShow ? _jsx(AnimatedTyping, {\n      text: [\"Hi i am an AI programmed, to judge your music taste bla bla bla ...\"]\n    }) : null]\n  });\n};\n\nvar ScreenThree = function ScreenThree(props) {\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    shouldShowText = _useState6[0],\n    sethouldShowText = _useState6[1];\n\n  var back = function back() {\n    props.navigation.navigate('Music Judger');\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: [_jsx(AnimatedTyping, {\n      text: [\"text text loading blablabla\"],\n      onComplete: function onComplete() {\n        return sethouldShowText(true);\n      }\n    }), shouldShowText ? _jsx(AnimatedTyping, {\n      text: [\"drugi text blabla\"]\n    }) : null, _jsx(Button, {\n      style: styles.buttomStyle,\n      title: \"back\",\n      color: \"#000000\",\n      onPress: back\n    })]\n  });\n};\nvar App = function App() {\n  var Stack = createStackNavigator();\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Music Judger\",\n        component: ScreenOne\n      }), _jsx(Stack.Screen, {\n        name: \"ScreenTwo\",\n        component: ScreenTwo\n      }), _jsx(Stack.Screen, {\n        name: \"ScreenThree\",\n        component: ScreenThree\n      })]\n    })\n  });\n};\nvar discovery = {\n  authorizationEndpoint: 'https://accounts.spotify.com/authorize',\n  tokenEndpoint: 'https://accounts.spotify.com/api/token'\n};\nWebBrowser.maybeCompleteAuthSession();\nexport var getUserPlaylists = function () {\n  var _ref = _asyncToGenerator(function* () {\n    var sp = yield getValidSPObj();\n    var _yield$sp$getMe = yield sp.getMe(),\n      userId = _yield$sp$getMe.id;\n    console.log(userId);\n    var _yield$sp$getUserPlay = yield sp.getUserPlaylists(userId, {\n        limit: 50\n      }),\n      playlists = _yield$sp$getUserPlay.items;\n    return playlists;\n  });\n  return function getUserPlaylists() {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar getAuthorizationCode = function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    try {\n      var redirectUrl = AuthSession.makeRedirectUri();\n      var url = 'https://accounts.spotify.com/authorize' + '?response_type=code' + '&client_id=' + spotifyCredentials.clientId + (scopes ? '&scope=' + encodeURIComponent(scopes) : '') + '&redirect_uri=' + encodeURIComponent(redirectUrl);\n      console.log(url);\n      WebBrowser.maybeCompleteAuthSession();\n      var _result = yield AuthSession.startAsync({\n        authUrl: url\n      });\n    } catch (err) {\n      console.error(err);\n    }\n    return result.params.code;\n  });\n  return function getAuthorizationCode() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getValidSPObj = function () {\n  var _ref3 = _asyncToGenerator(function* () {\n    var tokenExpirationTime = yield getUserData('expirationTime');\n    if (new Date().getTime() > tokenExpirationTime) {\n      yield refreshTokens();\n    }\n    var accessToken = yield getUserData('accessToken');\n    var sp = new SpotifyWebAPI();\n    yield sp.setAccessToken(accessToken);\n    return sp;\n  });\n  return function getValidSPObj() {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar getTokens = function () {\n  var _ref4 = _asyncToGenerator(function* () {\n    try {\n      var authorizationCode = yield getAuthorizationCode();\n      var credsB64 = btoa(spotifyCredentials.clientId + \":\" + spotifyCredentials.clientSecret);\n      var response = yield fetch('https://accounts.spotify.com/api/token', {\n        method: 'POST',\n        headers: {\n          Authorization: \"Basic \" + credsB64,\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: \"grant_type=authorization_code&code=\" + authorizationCode + \"&redirect_uri=\" + spotifyCredentials.redirectUri\n      });\n      var responseJson = yield response.json();\n      var accessToken = responseJson.access_token,\n        refreshToken = responseJson.refresh_token,\n        expiresIn = responseJson.expires_in;\n      var _expirationTime = new Date().getTime() + expiresIn * 1000;\n      yield setUserData('accessToken', accessToken);\n      yield setUserData('refreshToken', refreshToken);\n      yield setUserData('expirationTime', _expirationTime);\n    } catch (err) {\n      console.error(err);\n    }\n  });\n  return function getTokens() {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexport var refreshTokens = function () {\n  var _ref5 = _asyncToGenerator(function* () {\n    try {\n      var credsB64 = btoa(spotifyCredentials.clientId + \":\" + spotifyCredentials.clientSecret);\n      var refreshToken = yield getUserData('refreshToken');\n      var response = yield fetch('https://accounts.spotify.com/api/token', {\n        method: 'POST',\n        headers: {\n          Authorization: \"Basic \" + credsB64,\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: \"grant_type=refresh_token&refresh_token=\" + refreshToken\n      });\n      var responseJson = yield response.json();\n      if (responseJson.error) {\n        yield getTokens();\n      } else {\n        var newAccessToken = responseJson.access_token,\n          newRefreshToken = responseJson.refresh_token,\n          expiresIn = responseJson.expires_in;\n        var _expirationTime2 = new Date().getTime() + expiresIn * 1000;\n        yield setUserData('accessToken', newAccessToken);\n        if (newRefreshToken) {\n          yield setUserData('refreshToken', newRefreshToken);\n        }\n      }\n      yield setUserData('expirationTime', expirationTime);\n    } catch (err) {\n      console.error(err);\n    }\n  });\n  return function refreshTokens() {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport default App;","map":{"version":3,"names":["React","useState","StatusBar","styles","AnimatedTyping","spotifyCredentials","SpotifyWebAPI","WebBrowser","makeRedirectUri","useAuthRequest","encode","btoa","axios","scopesArr","scopes","join","NavigationContainer","createStackNavigator","ScreenOne","props","onPress","navigation","navigate","container","Header","album_2","require","bottomTextLeft","ScreenTwo","clientId","usePKCE","redirectUri","scheme","discovery","request","response","promptAsync","useEffect","type","accessToken","params","console","log","shouldShow","setShouldShow","showButton","setShowButton","next","screen2","button2Style","color","ScreenThree","shouldShowText","sethouldShowText","back","flex","justifyContent","alignItems","buttomStyle","App","Stack","headerShown","authorizationEndpoint","tokenEndpoint","maybeCompleteAuthSession","getUserPlaylists","sp","getValidSPObj","getMe","userId","id","limit","playlists","items","getAuthorizationCode","redirectUrl","AuthSession","url","encodeURIComponent","result","startAsync","authUrl","err","error","code","tokenExpirationTime","getUserData","Date","getTime","refreshTokens","setAccessToken","getTokens","authorizationCode","credsB64","clientSecret","fetch","method","headers","Authorization","body","responseJson","json","access_token","refreshToken","refresh_token","expiresIn","expires_in","expirationTime","setUserData","newAccessToken","newRefreshToken"],"sources":["/Users/merisa/Documents/GitHub/r321/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { styles } from './styleApp.js';\nimport {View, Text, StyleSheet, TouchableOpacity, SafeAreaView, Button, Pressable } from 'react-native';\nimport AnimatedTyping from './AnimatedTyping.js';\nimport { spotifyCredentials } from './secrets';\nimport SpotifyWebAPI from 'spotify-web-api-js';\nimport * as WebBrowser from 'expo-web-browser';\n//import * as AuthSession from 'expo-auth-session';\nimport { makeRedirectUri, useAuthRequest } from 'expo-auth-session';\nimport { encode as btoa } from 'base-64';\nimport axios from 'axios';\n//the scope for our analytics\nconst scopesArr = ['user-modify-playback-state'];\nconst scopes = scopesArr.join(' ');\n//Navigation import\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createStackNavigator} from '@react-navigation/stack';\n\n\n//Screen One\nconst ScreenOne = props => {\n\n  //onPress To Navigate\n  const onPress = () => {\n    props.navigation.navigate('ScreenTwo');\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n        <Text style={styles.Header}>How bad is your music taste?</Text>\n        \n  \n        <img\n          style={styles.album_2}\n          src={require(\"./empty_vinyl.png\")}\n        />\n        <Button \n          color={\"#000000\"}\n          title=\"Find Out!\"\n          //color={\"#000000\"}\n          onPress={onPress}>\n        </Button>\n  \n        <Text style={styles.bottomTextLeft}>Project by Timotej, Viktor and Merisa</Text>\n  \n        <StatusBar style=\"auto\" /> \n      </SafeAreaView>\n  );\n};\n\n\n\n//Screen Two\nconst ScreenTwo = props => {\n  const [request, response, promptAsync] = useAuthRequest(\n    {\n      clientId: spotifyCredentials.clientId,\n      scopes: ['user-modify-playback-state','user-read-currently-playing','user-read-playback-state','user-library-modify',\n      'user-library-read','playlist-read-private','playlist-read-collaborative','playlist-modify-public',\n      'playlist-modify-private','user-read-recently-played','user-top-read'],\n      // In order to follow the \"Authorization Code Flow\" to fetch token after authorizationEndpoint\n      // this must be set to false\n      usePKCE: false,\n      redirectUri: makeRedirectUri({\n        scheme: 'app'\n      }),\n    },\n    discovery\n  );\n\n  React.useEffect(() => {\n    if (response?.type === 'success') {\n      const { accessToken } = response.params;\n      console.log(\"sjfkswe\");\n    }\n  }, [response]);\n\n  const [shouldShow, setShouldShow] = useState(false);//false \n  const [showButton, setShowButton] = useState(false);\n\n\n  const next = () => {\n    props.navigation.navigate('ScreenThree');\n    promptAsync();\n  };\n  return (\n    <View style={styles.screen2}>\n\n      <AnimatedTyping text={[\"Hello there fellow music enthusiast!\",\"\", \";)\"]} onComplete={() => setShowButton(true)}/>\n\n  \n      {showButton ? (\n          <Pressable \n          style={styles.button2Style}\n          \n          onPress={() => setShouldShow(!shouldShow)}\n        > <Text style={{color: \"white\"}}>show component</Text> </Pressable>\n      ) : null}\n\n      {showButton ? (\n          <Pressable  \n          style={styles.button2Style}\n          \n          onPress={next}><Text style={{color: \"white\"}}>log in with spotify</Text>\n      </Pressable >\n      ) : null}\n\n      {shouldShow ? (\n        <AnimatedTyping text={[\"Hi i am an AI programmed, to judge your music taste bla bla bla ...\"] } />\n      ) : null}\n          \n    </View>\n  );\n};\n\n//Screen Three\nconst ScreenThree = props => {\n\n  const [shouldShowText, sethouldShowText] = useState(false);//false \n\n  const back = () => {\n    props.navigation.navigate('Music Judger');\n  };\n  return (\n    <View style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n\n      <AnimatedTyping text={[\"text text loading blablabla\"]} onComplete={() => sethouldShowText(true)}/>\n\n      {shouldShowText ? (\n        <AnimatedTyping text={[\"drugi text blabla\"] } />\n      ) : null}\n\n      <Button \n          style={styles.buttomStyle}\n          title=\"back\"\n          color={\"#000000\"}\n          onPress={back}>\n        </Button>\n    </View>\n  );\n};\n\nconst App = () => {\n  const Stack = createStackNavigator();\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        screenOptions={{\n        headerShown: false //nastavljanje headerja\n        }}\n      >\n        <Stack.Screen name=\"Music Judger\" component={ScreenOne} />\n        <Stack.Screen name=\"ScreenTwo\" component={ScreenTwo} />\n        <Stack.Screen name=\"ScreenThree\" component={ScreenThree} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nconst discovery = {\n  authorizationEndpoint: 'https://accounts.spotify.com/authorize',\n  tokenEndpoint: 'https://accounts.spotify.com/api/token',\n};\n\nWebBrowser.maybeCompleteAuthSession();\n\n\nexport const getUserPlaylists = async () => {\n  const sp = await getValidSPObj();\n  const { id: userId } = await sp.getMe();\n  console.log(userId);\n  const { items: playlists } = await sp.getUserPlaylists(userId, { limit: 50 });\n  return playlists;\n};\n//step 1\nconst getAuthorizationCode = async () => {\ntry { \n    const redirectUrl = AuthSession.makeRedirectUri();\n    let url=\n    'https://accounts.spotify.com/authorize' +\n    '?response_type=code' +\n    '&client_id=' +\n    spotifyCredentials.clientId +\n    (scopes ? '&scope=' + encodeURIComponent(scopes) : '') +\n    '&redirect_uri=' +\n    encodeURIComponent(redirectUrl);\n    console.log(url);\n    WebBrowser.maybeCompleteAuthSession();\n    const result = await AuthSession.startAsync({  authUrl:url  })\n    \n  } catch (err) {\n    console.error(err)\n  }\n  return result.params.code\n}\n\n\nexport const getValidSPObj = async () => {\n  const tokenExpirationTime = await getUserData('expirationTime');\n  if (new Date().getTime() > tokenExpirationTime) {\n    // access token has expired, so we need to use the refresh token\n    await refreshTokens();\n  }\n  const accessToken = await getUserData('accessToken');\n  var sp = new SpotifyWebAPI();\n  await sp.setAccessToken(accessToken);\n  return sp;\n}\n\n//step 2: create access token and refresh token\nconst getTokens = async () => {\n  try {\n    const authorizationCode = await getAuthorizationCode() //we wrote this function above\n    const credsB64 = btoa(`${spotifyCredentials.clientId}:${spotifyCredentials.clientSecret}`);\n    const response = await fetch('https://accounts.spotify.com/api/token', {\n      method: 'POST',\n      headers: {\n        Authorization: `Basic ${credsB64}`,\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: `grant_type=authorization_code&code=${authorizationCode}&redirect_uri=${\n        spotifyCredentials.redirectUri\n      }`,\n    });\n    const responseJson = await response.json();\n    \n    const {\n      access_token: accessToken,\n      refresh_token: refreshToken,\n      expires_in: expiresIn,\n    } = responseJson;\n\n    const expirationTime = new Date().getTime() + expiresIn * 1000;\n    await setUserData('accessToken', accessToken);\n    await setUserData('refreshToken', refreshToken);\n    await setUserData('expirationTime', expirationTime);\n  } catch (err) {\n    console.error(err);\n  }\n}\n\n//step 3: refresh the token (since the tokens from step 2 have a lifespan)\n\nexport const refreshTokens = async () => {\n  try { \n    const credsB64 = btoa(`${spotifyCredentials.clientId}:${spotifyCredentials.clientSecret}`);\n    const refreshToken = await getUserData('refreshToken');\n    const response = await fetch('https://accounts.spotify.com/api/token', {\n      method: 'POST',\n      headers: {\n        Authorization: `Basic ${credsB64}`,\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: `grant_type=refresh_token&refresh_token=${refreshToken}`,\n    });\n    const responseJson = await response.json();\n    if (responseJson.error) {\n      await getTokens();\n    } else {\n      const {\n        access_token: newAccessToken,\n        refresh_token: newRefreshToken,\n        expires_in: expiresIn,\n      } = responseJson;\n\n      const expirationTime = new Date().getTime() + expiresIn * 1000;\n      await setUserData('accessToken', newAccessToken);\n      if (newRefreshToken) {\n        await setUserData('refreshToken', newRefreshToken);\n      }\n   \n       }   await setUserData('expirationTime', expirationTime);\n  } catch (err) {\n    console.error(err)\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}