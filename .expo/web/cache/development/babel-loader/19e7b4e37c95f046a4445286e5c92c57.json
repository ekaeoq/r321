{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nexport default function ModalStatusBarManager(_ref) {\n  var _flattenedStyle$trans, _flattenedStyle$trans2;\n  var dark = _ref.dark,\n    layout = _ref.layout,\n    insets = _ref.insets,\n    style = _ref.style;\n  var _useTheme = useTheme(),\n    darkTheme = _useTheme.dark;\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    overlapping = _React$useState2[0],\n    setOverlapping = _React$useState2[1];\n  var scale = 1 - 20 / layout.width;\n  var offset = (insets.top - 34) * scale;\n  var flattenedStyle = StyleSheet.flatten(style);\n  var translateY = flattenedStyle === null || flattenedStyle === void 0 ? void 0 : (_flattenedStyle$trans = flattenedStyle.transform) === null || _flattenedStyle$trans === void 0 ? void 0 : (_flattenedStyle$trans2 = _flattenedStyle$trans.find(function (s) {\n    return s.translateY !== undefined;\n  })) === null || _flattenedStyle$trans2 === void 0 ? void 0 : _flattenedStyle$trans2.translateY;\n  React.useEffect(function () {\n    var listener = function listener(_ref2) {\n      var value = _ref2.value;\n      setOverlapping(value < offset);\n    };\n    var sub = translateY === null || translateY === void 0 ? void 0 : translateY.addListener(listener);\n    return function () {\n      return translateY === null || translateY === void 0 ? void 0 : translateY.removeListener(sub);\n    };\n  }, [offset, translateY]);\n  var darkContent = dark != null ? dark : !darkTheme;\n  return React.createElement(StatusBar, {\n    animated: true,\n    barStyle: overlapping && darkContent ? 'dark-content' : 'light-content'\n  });\n}","map":{"version":3,"mappings":";AAAA,SAASA,QAAQ,QAAQ,0BAA0B;AACnD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAA;AAAA;AAa9B,eAAe,SAASC,qBAAqB,OAKnC;EAAA;EAAA,IAJRC,IAAI,GAIEC,KAJND,IAAI;IACJE,MAAM,GAGAD,KAHNC,MAAM;IACNC,MAAM,GAEAF,KAFNE,MAAM;IACNC,QACMH,KADNG;EAEA,gBAA4BP,QAAQ,EAAE;IAAxBQ,sBAANL,IAAI;EACZ,sBAAsCF,KAAK,CAACQ,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAnDC,WAAW;IAAEC,cAAc;EAElC,IAAMC,KAAK,GAAG,CAAC,GAAG,EAAE,GAAGP,MAAM,CAACQ,KAAK;EACnC,IAAMC,MAAM,GAAG,CAACR,MAAM,CAACS,GAAG,GAAG,EAAE,IAAIH,KAAK;EAExC,IAAMI,cAAc,GAAGC,UAAU,CAACC,OAAO,CAACX,KAAK,CAAC;EAChD,IAAMY,UAAU,GAAGH,cAAc,aAAdA,cAAc,gDAAdA,cAAc,CAAEI,SAAS,oFAAzBC,sBAA2BC,IAAI,CAC/CC,WAAM;IAAA,OAAKA,CAAC,CAACJ,UAAU,KAAKK,SAAS;EAAA,EACvC,2DAFkBC,uBAEhBN,UAAU;EAEblB,KAAK,CAACyB,SAAS,CAAC,YAAM;IACpB,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAGC,OAAkC;MAAA,IAA/BC,QAA0BD,MAA1BC;MAClBlB,cAAc,CAACkB,KAAK,GAAGf,MAAM,CAAC;IAChC,CAAC;IAED,IAAMgB,GAAG,GAAGX,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEY,WAAW,CAACJ,QAAQ,CAAC;IAE7C,OAAO;MAAA,OAAMR,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEa,cAAc,CAACF,GAAG,CAAC;IAAA;EAC9C,CAAC,EAAE,CAAChB,MAAM,EAAEK,UAAU,CAAC,CAAC;EAExB,IAAMc,WAAW,GAAG9B,IAAI,WAAJA,IAAI,GAAI,CAACK,SAAS;EAEtC,OACEP,oBAACiC,SAAS;IACRC,QAAQ;IACRC,QAAQ,EAAE1B,WAAW,IAAIuB,WAAW,GAAG,cAAc,GAAG;EAAgB,EACxE;AAEN","names":["useTheme","React","ModalStatusBarManager","dark","_ref","layout","insets","style","darkTheme","useState","overlapping","setOverlapping","scale","width","offset","top","flattenedStyle","StyleSheet","flatten","translateY","transform","_flattenedStyle$trans","find","s","undefined","_flattenedStyle$trans2","useEffect","listener","_ref2","value","sub","addListener","removeListener","darkContent","StatusBar","animated","barStyle"],"sourceRoot":"../../src","sources":["ModalStatusBarManager.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}