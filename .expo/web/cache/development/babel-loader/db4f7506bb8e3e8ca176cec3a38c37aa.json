{"ast":null,"code":"\nimport createEventHandle from \"../createEventHandle\";\nimport useLayoutEffect from \"../useLayoutEffect\";\nimport useStable from \"../useStable\";\n\nexport default function useEvent(event, options) {\n  var targetListeners = useStable(function () {\n    return new Map();\n  });\n  var addListener = useStable(function () {\n    var addEventListener = createEventHandle(event, options);\n    return function (target, callback) {\n      var removeTargetListener = targetListeners.get(target);\n      if (removeTargetListener != null) {\n        removeTargetListener();\n      }\n      if (callback == null) {\n        targetListeners.delete(target);\n      }\n      var removeEventListener = addEventListener(target, callback);\n      targetListeners.set(target, removeEventListener);\n      return removeEventListener;\n    };\n  });\n  useLayoutEffect(function () {\n    return function () {\n      targetListeners.forEach(function (removeListener) {\n        removeListener();\n      });\n      targetListeners.clear();\n    };\n  }, [targetListeners]);\n  return addListener;\n}","map":{"version":3,"names":["createEventHandle","useLayoutEffect","useStable","useEvent","event","options","targetListeners","Map","addListener","addEventListener","target","callback","removeTargetListener","get","delete","removeEventListener","set","forEach","removeListener","clear"],"sources":["D:/DOKUMENTI/r321/node_modules/react-native-web/dist/modules/useEvent/index.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nimport createEventHandle from '../createEventHandle';\r\nimport useLayoutEffect from '../useLayoutEffect';\r\nimport useStable from '../useStable';\r\n\r\n/**\r\n * This can be used with any event type include custom events.\r\n *\r\n * const click = useEvent('click', options);\r\n * useEffect(() => {\r\n *   click.setListener(target, onClick);\r\n *   return () => click.clear();\r\n * }).\r\n */\r\nexport default function useEvent(event, options) {\r\n  var targetListeners = useStable(() => new Map());\r\n  var addListener = useStable(() => {\r\n    var addEventListener = createEventHandle(event, options);\r\n    return (target, callback) => {\r\n      var removeTargetListener = targetListeners.get(target);\r\n\r\n      if (removeTargetListener != null) {\r\n        removeTargetListener();\r\n      }\r\n\r\n      if (callback == null) {\r\n        targetListeners.delete(target);\r\n      }\r\n\r\n      var removeEventListener = addEventListener(target, callback);\r\n      targetListeners.set(target, removeEventListener);\r\n      return removeEventListener;\r\n    };\r\n  });\r\n  useLayoutEffect(() => {\r\n    return () => {\r\n      targetListeners.forEach(removeListener => {\r\n        removeListener();\r\n      });\r\n      targetListeners.clear();\r\n    };\r\n  }, [targetListeners]);\r\n  return addListener;\r\n}"],"mappings":";AAQA,OAAOA,iBAAiB;AACxB,OAAOC,eAAe;AACtB,OAAOC,SAAS;;AAWhB,eAAe,SAASC,QAAQ,CAACC,KAAK,EAAEC,OAAO,EAAE;EAC/C,IAAIC,eAAe,GAAGJ,SAAS,CAAC;IAAA,OAAM,IAAIK,GAAG,EAAE;EAAA,EAAC;EAChD,IAAIC,WAAW,GAAGN,SAAS,CAAC,YAAM;IAChC,IAAIO,gBAAgB,GAAGT,iBAAiB,CAACI,KAAK,EAAEC,OAAO,CAAC;IACxD,OAAO,UAACK,MAAM,EAAEC,QAAQ,EAAK;MAC3B,IAAIC,oBAAoB,GAAGN,eAAe,CAACO,GAAG,CAACH,MAAM,CAAC;MAEtD,IAAIE,oBAAoB,IAAI,IAAI,EAAE;QAChCA,oBAAoB,EAAE;MACxB;MAEA,IAAID,QAAQ,IAAI,IAAI,EAAE;QACpBL,eAAe,CAACQ,MAAM,CAACJ,MAAM,CAAC;MAChC;MAEA,IAAIK,mBAAmB,GAAGN,gBAAgB,CAACC,MAAM,EAAEC,QAAQ,CAAC;MAC5DL,eAAe,CAACU,GAAG,CAACN,MAAM,EAAEK,mBAAmB,CAAC;MAChD,OAAOA,mBAAmB;IAC5B,CAAC;EACH,CAAC,CAAC;EACFd,eAAe,CAAC,YAAM;IACpB,OAAO,YAAM;MACXK,eAAe,CAACW,OAAO,CAAC,UAAAC,cAAc,EAAI;QACxCA,cAAc,EAAE;MAClB,CAAC,CAAC;MACFZ,eAAe,CAACa,KAAK,EAAE;IACzB,CAAC;EACH,CAAC,EAAE,CAACb,eAAe,CAAC,CAAC;EACrB,OAAOE,WAAW;AACpB"},"metadata":{},"sourceType":"module"}