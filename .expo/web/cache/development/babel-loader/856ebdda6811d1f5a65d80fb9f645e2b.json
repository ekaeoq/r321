{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { styles } from \"./styleApp.js\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport AnimatedTyping from \"./AnimatedTyping.js\";\nimport { spotifyCredentials } from \"./secrets\";\nimport SpotifyWebAPI from 'spotify-web-api-js';\nimport * as WebBrowser from 'expo-web-browser';\nimport { makeRedirectUri, useAuthRequest } from 'expo-auth-session';\nimport { encode as btoa } from 'base-64';\nimport axios from 'axios';\nvar scopesArr = ['user-modify-playback-state'];\nvar scopes = scopesArr.join(' ');\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport ScreenOne from \"./ScreenOne.js\";\nimport ScreenTwo from \"./ScreenTwo.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ScreenThree = function ScreenThree(props) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    ShowAnswer1 = _useState2[0],\n    setShowAnswer1 = _useState2[1];\n\n  var back = function back() {\n    props.navigation.navigate('Music Judger');\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: [_jsx(AnimatedTyping, {\n      text: [\"First text\", \"question 1:\"],\n      onComplete: function onComplete() {\n        return sethouldShowText(true);\n      }\n    }), shouldShowText ? _jsx(AnimatedTyping, {\n      text: [\"drugi text blabla\"]\n    }) : null, _jsx(Button, {\n      style: styles.buttomStyle,\n      title: \"back\",\n      color: \"#000000\",\n      onPress: back\n    })]\n  });\n};\nexport default ScreenThree;","map":{"version":3,"names":["React","useState","StatusBar","styles","AnimatedTyping","spotifyCredentials","SpotifyWebAPI","WebBrowser","makeRedirectUri","useAuthRequest","encode","btoa","axios","scopesArr","scopes","join","NavigationContainer","createStackNavigator","ScreenOne","ScreenTwo","ScreenThree","props","ShowAnswer1","setShowAnswer1","back","navigation","navigate","flex","justifyContent","alignItems","sethouldShowText","shouldShowText","buttomStyle"],"sources":["D:/DOKUMENTI/r321/ScreenThree.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { styles } from './styleApp.js';\r\nimport {View, Text, StyleSheet, TouchableOpacity, SafeAreaView, Button, Pressable } from 'react-native';\r\nimport AnimatedTyping from './AnimatedTyping.js';\r\nimport { spotifyCredentials } from './secrets';\r\nimport SpotifyWebAPI from 'spotify-web-api-js';\r\nimport * as WebBrowser from 'expo-web-browser';\r\n//import * as AuthSession from 'expo-auth-session';\r\nimport { makeRedirectUri, useAuthRequest } from 'expo-auth-session';\r\nimport { encode as btoa } from 'base-64';\r\nimport axios from 'axios';\r\n//the scope for our analytics\r\nconst scopesArr = ['user-modify-playback-state'];\r\nconst scopes = scopesArr.join(' ');\r\n//Navigation import\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {createStackNavigator} from '@react-navigation/stack';\r\nimport ScreenOne from './ScreenOne.js';\r\nimport ScreenTwo from './ScreenTwo.js';\r\n\r\n\r\nconst ScreenThree = props => {\r\n    const [ShowAnswer1, setShowAnswer1] = useState(false);//false \r\n  \r\n    const back = () => {\r\n      props.navigation.navigate('Music Judger');\r\n    };\r\n\r\n    return (\r\n      <View style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\r\n  \r\n        <AnimatedTyping text={[\"First text\", \"question 1:\"]} onComplete={() => sethouldShowText(true)}/>\r\n  \r\n        {shouldShowText ? (\r\n          <AnimatedTyping text={[\"drugi text blabla\"] } />\r\n        ) : null}\r\n  \r\n        <Button \r\n            style={styles.buttomStyle}\r\n            title=\"back\"\r\n            color={\"#000000\"}\r\n            onPress={back}>\r\n          </Button>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  export default ScreenThree;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,MAAM;AAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEvC,OAAOC,cAAc;AACrB,SAASC,kBAAkB;AAC3B,OAAOC,aAAa,MAAM,oBAAoB;AAC9C,OAAO,KAAKC,UAAU,MAAM,kBAAkB;AAE9C,SAASC,eAAe,EAAEC,cAAc,QAAQ,mBAAmB;AACnE,SAASC,MAAM,IAAIC,IAAI,QAAQ,SAAS;AACxC,OAAOC,KAAK,MAAM,OAAO;AAEzB,IAAMC,SAAS,GAAG,CAAC,4BAA4B,CAAC;AAChD,IAAMC,MAAM,GAAGD,SAAS,CAACE,IAAI,CAAC,GAAG,CAAC;AAElC,SAAQC,mBAAmB,QAAO,0BAA0B;AAC5D,SAAQC,oBAAoB,QAAO,yBAAyB;AAC5D,OAAOC,SAAS;AAChB,OAAOC,SAAS;AAAuB;AAAA;AAGvC,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAGC,KAAK,EAAI;EACzB,gBAAsCpB,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA9CqB,WAAW;IAAEC,cAAc;;EAElC,IAAMC,IAAI,GAAG,SAAPA,IAAI,GAAS;IACjBH,KAAK,CAACI,UAAU,CAACC,QAAQ,CAAC,cAAc,CAAC;EAC3C,CAAC;EAED,OACE,MAAC,IAAI;IAAC,KAAK,EAAE;MAACC,IAAI,EAAE,CAAC;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAQ,CAAE;IAAA,WAErE,KAAC,cAAc;MAAC,IAAI,EAAE,CAAC,YAAY,EAAE,aAAa,CAAE;MAAC,UAAU,EAAE;QAAA,OAAMC,gBAAgB,CAAC,IAAI,CAAC;MAAA;IAAC,EAAE,EAE/FC,cAAc,GACb,KAAC,cAAc;MAAC,IAAI,EAAE,CAAC,mBAAmB;IAAG,EAAG,GAC9C,IAAI,EAER,KAAC,MAAM;MACH,KAAK,EAAE5B,MAAM,CAAC6B,WAAY;MAC1B,KAAK,EAAC,MAAM;MACZ,KAAK,EAAE,SAAU;MACjB,OAAO,EAAER;IAAK,EACP;EAAA,EACN;AAEX,CAAC;AAED,eAAeJ,WAAW"},"metadata":{},"sourceType":"module"}