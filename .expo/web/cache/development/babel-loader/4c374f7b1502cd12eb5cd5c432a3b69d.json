{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useRef, useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function AnimatedTyping(props) {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    text = _useState2[0],\n    setText = _useState2[1];\n  var _useState3 = useState(\"transparent\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    cursorColor = _useState4[0],\n    setCursorColor = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    messageIndex = _useState6[0],\n    setMessageIndex = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    textIndex = _useState8[0],\n    setTextIndex = _useState8[1];\n  var _useState9 = useState({\n      cursorTimeout: undefined,\n      typingTimeout: undefined,\n      firstNewLineTimeout: undefined,\n      secondNewLineTimeout: undefined\n    }),\n    _useState10 = _slicedToArray(_useState9, 2),\n    timeouts = _useState10[0],\n    setTimeouts = _useState10[1];\n  var textRef = useRef(text);\n  textRef.current = text;\n  var cursorColorRef = useRef(cursorColor);\n  cursorColorRef.current = cursorColor;\n  var messageIndexRef = useRef(messageIndex);\n  messageIndexRef.current = messageIndex;\n  var textIndexRef = useRef(textIndex);\n  textIndexRef.current = textIndex;\n  var timeoutsRef = useRef(timeouts);\n  timeoutsRef.current = timeouts;\n  var typingAnimation = function typingAnimation() {\n    if (textIndexRef.current < props.text[messageIndexRef.current].length) {\n      setText(textRef.current + props.text[messageIndexRef.current].charAt(textIndexRef.current));\n      setTextIndex(textIndexRef.current + 1);\n      var updatedTimeouts = _objectSpread({}, timeoutsRef.current);\n      updatedTimeouts.typingTimeout = setTimeout(typingAnimation, 50);\n      setTimeouts(updatedTimeouts);\n    } else if (messageIndexRef.current + 1 < props.text.length) {\n      setMessageIndex(messageIndexRef.current + 1);\n      setTextIndex(0);\n      var _updatedTimeouts = _objectSpread({}, timeoutsRef.current);\n      _updatedTimeouts.firstNewLineTimeout = setTimeout(newLineAnimation, 120);\n      _updatedTimeouts.secondNewLineTimeout = setTimeout(newLineAnimation, 200);\n      _updatedTimeouts.typingTimeout = setTimeout(typingAnimation, 280);\n      setTimeouts(_updatedTimeouts);\n    } else {\n      clearInterval(timeoutsRef.current.cursorTimeout);\n      setCursorColor(\"transparent\");\n      if (props.onComplete) {\n        props.onComplete();\n      }\n    }\n  };\n  var newLineAnimation = function newLineAnimation() {\n    setText(textRef.current + \"\\n\");\n  };\n  var cursorAnimation = function cursorAnimation() {\n    if (cursorColorRef.current === \"transparent\") {\n      setCursorColor(\"#8EA960\");\n    } else {\n      setCursorColor(\"transparent\");\n    }\n  };\n  useEffect(function () {\n    var updatedTimeouts = _objectSpread({}, timeoutsRef.current);\n    updatedTimeouts.typingTimeout = setTimeout(typingAnimation, 500);\n    updatedTimeouts.cursorTimeout = setInterval(cursorAnimation, 250);\n    setTimeouts(updatedTimeouts);\n    return function () {\n      clearTimeout(timeoutsRef.current.typingTimeout);\n      clearTimeout(timeoutsRef.current.firstNewLineTimeout);\n      clearTimeout(timeoutsRef.current.secondNewLineTimeout);\n      clearInterval(timeoutsRef.current.cursorTimeout);\n    };\n  }, []);\n  return _jsxs(Text, {\n    style: styles.text,\n    children: [text, _jsx(Text, {\n      style: {\n        color: cursorColor,\n        fontSize: 40\n      },\n      children: \"|\"\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  text: {\n    color: \"black\",\n    fontSize: 40,\n    fontFamily: 'monospace'\n  }\n});","map":{"version":3,"names":["useRef","useState","useEffect","AnimatedTyping","props","text","setText","cursorColor","setCursorColor","messageIndex","setMessageIndex","textIndex","setTextIndex","cursorTimeout","undefined","typingTimeout","firstNewLineTimeout","secondNewLineTimeout","timeouts","setTimeouts","textRef","current","cursorColorRef","messageIndexRef","textIndexRef","timeoutsRef","typingAnimation","length","charAt","updatedTimeouts","setTimeout","newLineAnimation","clearInterval","onComplete","cursorAnimation","setInterval","clearTimeout","styles","color","fontSize","StyleSheet","create","fontFamily"],"sources":["D:/DOKUMENTI/Faks/r321/AnimatedTyping.js"],"sourcesContent":["import { useRef, useState, useEffect } from 'react';\r\nimport {StyleSheet, Text } from 'react-native';\r\n\r\nexport default function AnimatedTyping(props) {\r\n    //starting positions\r\n    let [text, setText] = useState(\"\");\r\n    let [cursorColor, setCursorColor] = useState(\"transparent\");\r\n    let [messageIndex, setMessageIndex] = useState(0);\r\n    let [textIndex, setTextIndex] = useState(0);\r\n    let [timeouts, setTimeouts] = useState({\r\n        cursorTimeout: undefined,\r\n        typingTimeout: undefined,\r\n        firstNewLineTimeout: undefined,\r\n        secondNewLineTimeout: undefined,\r\n    });\r\n\r\n    let textRef = useRef(text);\r\n    textRef.current = text;\r\n\r\n    let cursorColorRef = useRef(cursorColor);\r\n    cursorColorRef.current = cursorColor;\r\n\r\n    let messageIndexRef = useRef(messageIndex);\r\n    messageIndexRef.current = messageIndex;\r\n\r\n    let textIndexRef = useRef(textIndex);\r\n    textIndexRef.current = textIndex;\r\n\r\n    let timeoutsRef = useRef(timeouts);\r\n    timeoutsRef.current = timeouts;\r\n\r\n    let typingAnimation = () => {\r\n        if (textIndexRef.current < props.text[messageIndexRef.current].length) {\r\n            setText(textRef.current + props.text[messageIndexRef.current].charAt(textIndexRef.current));\r\n            setTextIndex(textIndexRef.current + 1);\r\n\r\n            let updatedTimeouts = { ...timeoutsRef.current };\r\n            updatedTimeouts.typingTimeout = setTimeout(typingAnimation, 50);\r\n            setTimeouts(updatedTimeouts);\r\n        } else if (messageIndexRef.current + 1 < props.text.length) {\r\n            setMessageIndex(messageIndexRef.current + 1);\r\n            setTextIndex(0);\r\n\r\n            let updatedTimeouts = {...timeoutsRef.current};\r\n            updatedTimeouts.firstNewLineTimeout = setTimeout(newLineAnimation, 120);\r\n            updatedTimeouts.secondNewLineTimeout = setTimeout(newLineAnimation, 200);\r\n            updatedTimeouts.typingTimeout = setTimeout(typingAnimation, 280);\r\n            setTimeouts(updatedTimeouts);\r\n        } else {\r\n            clearInterval(timeoutsRef.current.cursorTimeout);\r\n            setCursorColor(\"transparent\");\r\n\r\n            if (props.onComplete) {\r\n                props.onComplete();\r\n            }\r\n        }\r\n    };\r\n\r\n    let newLineAnimation = () => {\r\n        setText(textRef.current + \"\\n\");\r\n    };\r\n\r\n    let cursorAnimation = () => {\r\n        if (cursorColorRef.current === \"transparent\") {\r\n            setCursorColor(\"#8EA960\");\r\n        } else {\r\n            setCursorColor(\"transparent\");\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        let updatedTimeouts = { ...timeoutsRef.current };\r\n        updatedTimeouts.typingTimeout = setTimeout(typingAnimation, 500);\r\n        updatedTimeouts.cursorTimeout = setInterval(cursorAnimation, 250);\r\n        setTimeouts(updatedTimeouts);\r\n\r\n        return () => {\r\n            clearTimeout(timeoutsRef.current.typingTimeout);\r\n            clearTimeout(timeoutsRef.current.firstNewLineTimeout);\r\n            clearTimeout(timeoutsRef.current.secondNewLineTimeout);\r\n            clearInterval(timeoutsRef.current.cursorTimeout);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <Text style={styles.text}>\r\n            {text}\r\n            <Text style={{color: cursorColor, fontSize: 40}}>|</Text>\r\n        </Text>\r\n    )\r\n};\r\n\r\nlet styles = StyleSheet.create({\r\n    text: {\r\n        color: \"black\",\r\n        fontSize: 40,\r\n        fontFamily: 'monospace',\r\n        //alignSelf: \"stretch\"\r\n    }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}