{"ast":null,"code":"import React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { styles } from \"./styleApp.js\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport AnimatedTyping from \"./AnimatedTyping.js\";\nimport { spotifyCredentials } from \"./secrets\";\nimport SpotifyWebAPI from 'spotify-web-api-js';\nimport * as WebBrowser from 'expo-web-browser';\nimport { makeRedirectUri, useAuthRequest } from 'expo-auth-session';\nimport { encode as btoa } from 'base-64';\nimport axios from 'axios';\nvar scopesArr = ['user-modify-playback-state'];\nvar scopes = scopesArr.join(' ');\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport ScreenOne from \"./ScreenOne.js\";\nimport ScreenTwo from \"./ScreenTwo.js\";\nimport Results from \"./Results.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar App = function App() {\n  var Stack = createStackNavigator();\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Music Judger\",\n        component: ScreenOne\n      }), _jsx(Stack.Screen, {\n        name: \"ScreenTwo\",\n        component: ScreenTwo\n      }), _jsx(Stack.Screen, {\n        name: \"Results\",\n        component: Results\n      })]\n    })\n  });\n};\nWebBrowser.maybeCompleteAuthSession();\nexport default App;","map":{"version":3,"names":["React","useState","StatusBar","styles","AnimatedTyping","spotifyCredentials","SpotifyWebAPI","WebBrowser","makeRedirectUri","useAuthRequest","encode","btoa","axios","scopesArr","scopes","join","NavigationContainer","createStackNavigator","ScreenOne","ScreenTwo","Results","App","Stack","headerShown","maybeCompleteAuthSession"],"sources":["/Users/merisa/Documents/GitHub/r321/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { styles } from './styleApp.js';\nimport {View, Text, StyleSheet, TouchableOpacity, SafeAreaView, Button, Pressable } from 'react-native';\nimport AnimatedTyping from './AnimatedTyping.js';\nimport { spotifyCredentials } from './secrets';\nimport SpotifyWebAPI from 'spotify-web-api-js';\nimport * as WebBrowser from 'expo-web-browser';\n//import * as AuthSession from 'expo-auth-session';\nimport { makeRedirectUri, useAuthRequest } from 'expo-auth-session';\nimport { encode as btoa } from 'base-64';\nimport axios from 'axios';\n//the scope for our analytics\nconst scopesArr = ['user-modify-playback-state'];\nconst scopes = scopesArr.join(' ');\n//Navigation import\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport ScreenOne from './ScreenOne.js';\nimport ScreenTwo from './ScreenTwo.js';\nimport Results from './Results.js';\n\n\nconst App = () => {\n  const Stack = createStackNavigator();\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        screenOptions={{\n        headerShown: false //nastavljanje headerja\n        }}\n      >\n        <Stack.Screen name=\"Music Judger\" component={ScreenOne} />\n        <Stack.Screen name=\"ScreenTwo\" component={ScreenTwo} />\n        <Stack.Screen name=\"Results\" component={Results} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nWebBrowser.maybeCompleteAuthSession();\n\n\nexport default App;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,MAAM;AAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEvC,OAAOC,cAAc;AACrB,SAASC,kBAAkB;AAC3B,OAAOC,aAAa,MAAM,oBAAoB;AAC9C,OAAO,KAAKC,UAAU,MAAM,kBAAkB;AAE9C,SAASC,eAAe,EAAEC,cAAc,QAAQ,mBAAmB;AACnE,SAASC,MAAM,IAAIC,IAAI,QAAQ,SAAS;AACxC,OAAOC,KAAK,MAAM,OAAO;AAEzB,IAAMC,SAAS,GAAG,CAAC,4BAA4B,CAAC;AAChD,IAAMC,MAAM,GAAGD,SAAS,CAACE,IAAI,CAAC,GAAG,CAAC;AAElC,SAAQC,mBAAmB,QAAO,0BAA0B;AAC5D,SAAQC,oBAAoB,QAAO,yBAAyB;AAC5D,OAAOC,SAAS;AAChB,OAAOC,SAAS;AAChB,OAAOC,OAAO;AAAqB;AAAA;AAGnC,IAAMC,GAAG,GAAG,SAANA,GAAG,GAAS;EAChB,IAAMC,KAAK,GAAGL,oBAAoB,EAAE;EAEpC,OACE,KAAC,mBAAmB;IAAA,UAClB,MAAC,KAAK,CAAC,SAAS;MACd,aAAa,EAAE;QACfM,WAAW,EAAE;MACb,CAAE;MAAA,WAEF,KAAC,KAAK,CAAC,MAAM;QAAC,IAAI,EAAC,cAAc;QAAC,SAAS,EAAEL;MAAU,EAAG,EAC1D,KAAC,KAAK,CAAC,MAAM;QAAC,IAAI,EAAC,WAAW;QAAC,SAAS,EAAEC;MAAU,EAAG,EACvD,KAAC,KAAK,CAAC,MAAM;QAAC,IAAI,EAAC,SAAS;QAAC,SAAS,EAAEC;MAAQ,EAAG;IAAA;EACnC,EACE;AAE1B,CAAC;AAEDb,UAAU,CAACiB,wBAAwB,EAAE;AAGrC,eAAeH,GAAG"},"metadata":{},"sourceType":"module"}