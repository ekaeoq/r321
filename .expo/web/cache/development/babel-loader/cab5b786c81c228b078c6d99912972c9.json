{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { getHeaderTitle, HeaderBackContext, HeaderHeightContext, HeaderShownContext } from '@react-navigation/elements';\nimport { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ModalPresentationContext from \"../../utils/ModalPresentationContext\";\nimport useKeyboardManager from \"../../utils/useKeyboardManager\";\nimport Card from \"./Card\";\nvar EPSILON = 0.1;\nfunction CardContainer(_ref) {\n  var interpolationIndex = _ref.interpolationIndex,\n    index = _ref.index,\n    active = _ref.active,\n    closing = _ref.closing,\n    gesture = _ref.gesture,\n    focused = _ref.focused,\n    modal = _ref.modal,\n    getPreviousScene = _ref.getPreviousScene,\n    getFocusedRoute = _ref.getFocusedRoute,\n    headerDarkContent = _ref.headerDarkContent,\n    hasAbsoluteFloatHeader = _ref.hasAbsoluteFloatHeader,\n    headerHeight = _ref.headerHeight,\n    onHeaderHeightChange = _ref.onHeaderHeightChange,\n    isParentHeaderShown = _ref.isParentHeaderShown,\n    isNextScreenTransparent = _ref.isNextScreenTransparent,\n    detachCurrentScreen = _ref.detachCurrentScreen,\n    layout = _ref.layout,\n    onCloseRoute = _ref.onCloseRoute,\n    onOpenRoute = _ref.onOpenRoute,\n    onGestureCancel = _ref.onGestureCancel,\n    onGestureEnd = _ref.onGestureEnd,\n    onGestureStart = _ref.onGestureStart,\n    onTransitionEnd = _ref.onTransitionEnd,\n    onTransitionStart = _ref.onTransitionStart,\n    renderHeader = _ref.renderHeader,\n    renderScene = _ref.renderScene,\n    safeAreaInsetBottom = _ref.safeAreaInsetBottom,\n    safeAreaInsetLeft = _ref.safeAreaInsetLeft,\n    safeAreaInsetRight = _ref.safeAreaInsetRight,\n    safeAreaInsetTop = _ref.safeAreaInsetTop,\n    scene = _ref.scene;\n  var parentHeaderHeight = React.useContext(HeaderHeightContext);\n  var _useKeyboardManager = useKeyboardManager(React.useCallback(function () {\n      var _scene$descriptor = scene.descriptor,\n        options = _scene$descriptor.options,\n        navigation = _scene$descriptor.navigation;\n      return navigation.isFocused() && options.keyboardHandlingEnabled !== false;\n    }, [scene.descriptor])),\n    onPageChangeStart = _useKeyboardManager.onPageChangeStart,\n    onPageChangeCancel = _useKeyboardManager.onPageChangeCancel,\n    onPageChangeConfirm = _useKeyboardManager.onPageChangeConfirm;\n  var handleOpen = function handleOpen() {\n    var route = scene.descriptor.route;\n    onTransitionEnd({\n      route: route\n    }, false);\n    onOpenRoute({\n      route: route\n    });\n  };\n  var handleClose = function handleClose() {\n    var route = scene.descriptor.route;\n    onTransitionEnd({\n      route: route\n    }, true);\n    onCloseRoute({\n      route: route\n    });\n  };\n  var handleGestureBegin = function handleGestureBegin() {\n    var route = scene.descriptor.route;\n    onPageChangeStart();\n    onGestureStart({\n      route: route\n    });\n  };\n  var handleGestureCanceled = function handleGestureCanceled() {\n    var route = scene.descriptor.route;\n    onPageChangeCancel();\n    onGestureCancel({\n      route: route\n    });\n  };\n  var handleGestureEnd = function handleGestureEnd() {\n    var route = scene.descriptor.route;\n    onGestureEnd({\n      route: route\n    });\n  };\n  var handleTransition = function handleTransition(_ref2) {\n    var closing = _ref2.closing,\n      gesture = _ref2.gesture;\n    var route = scene.descriptor.route;\n    if (!gesture) {\n      onPageChangeConfirm === null || onPageChangeConfirm === void 0 ? void 0 : onPageChangeConfirm(true);\n    } else if (active && closing) {\n      onPageChangeConfirm === null || onPageChangeConfirm === void 0 ? void 0 : onPageChangeConfirm(false);\n    } else {\n      onPageChangeCancel === null || onPageChangeCancel === void 0 ? void 0 : onPageChangeCancel();\n    }\n    onTransitionStart === null || onTransitionStart === void 0 ? void 0 : onTransitionStart({\n      route: route\n    }, closing);\n  };\n  var insets = {\n    top: safeAreaInsetTop,\n    right: safeAreaInsetRight,\n    bottom: safeAreaInsetBottom,\n    left: safeAreaInsetLeft\n  };\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var _React$useState = React.useState('box-none'),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    pointerEvents = _React$useState2[0],\n    setPointerEvents = _React$useState2[1];\n  React.useEffect(function () {\n    var _scene$progress$next, _scene$progress$next$;\n    var listener = (_scene$progress$next = scene.progress.next) === null || _scene$progress$next === void 0 ? void 0 : (_scene$progress$next$ = _scene$progress$next.addListener) === null || _scene$progress$next$ === void 0 ? void 0 : _scene$progress$next$.call(_scene$progress$next, function (_ref3) {\n      var value = _ref3.value;\n      setPointerEvents(value <= EPSILON ? 'box-none' : 'none');\n    });\n    return function () {\n      if (listener) {\n        var _scene$progress$next2, _scene$progress$next3;\n        (_scene$progress$next2 = scene.progress.next) === null || _scene$progress$next2 === void 0 ? void 0 : (_scene$progress$next3 = _scene$progress$next2.removeListener) === null || _scene$progress$next3 === void 0 ? void 0 : _scene$progress$next3.call(_scene$progress$next2, listener);\n      }\n    };\n  }, [pointerEvents, scene.progress.next]);\n  var _scene$descriptor$opt = scene.descriptor.options,\n    presentation = _scene$descriptor$opt.presentation,\n    animationEnabled = _scene$descriptor$opt.animationEnabled,\n    cardOverlay = _scene$descriptor$opt.cardOverlay,\n    cardOverlayEnabled = _scene$descriptor$opt.cardOverlayEnabled,\n    cardShadowEnabled = _scene$descriptor$opt.cardShadowEnabled,\n    cardStyle = _scene$descriptor$opt.cardStyle,\n    cardStyleInterpolator = _scene$descriptor$opt.cardStyleInterpolator,\n    gestureDirection = _scene$descriptor$opt.gestureDirection,\n    gestureEnabled = _scene$descriptor$opt.gestureEnabled,\n    gestureResponseDistance = _scene$descriptor$opt.gestureResponseDistance,\n    gestureVelocityImpact = _scene$descriptor$opt.gestureVelocityImpact,\n    headerMode = _scene$descriptor$opt.headerMode,\n    headerShown = _scene$descriptor$opt.headerShown,\n    transitionSpec = _scene$descriptor$opt.transitionSpec;\n  var previousScene = getPreviousScene({\n    route: scene.descriptor.route\n  });\n  var backTitle;\n  if (previousScene) {\n    var _previousScene$descri = previousScene.descriptor,\n      options = _previousScene$descri.options,\n      route = _previousScene$descri.route;\n    backTitle = getHeaderTitle(options, route.name);\n  }\n  var headerBack = React.useMemo(function () {\n    return backTitle !== undefined ? {\n      title: backTitle\n    } : undefined;\n  }, [backTitle]);\n  return React.createElement(Card, {\n    interpolationIndex: interpolationIndex,\n    gestureDirection: gestureDirection,\n    layout: layout,\n    insets: insets,\n    gesture: gesture,\n    current: scene.progress.current,\n    next: scene.progress.next,\n    closing: closing,\n    onOpen: handleOpen,\n    onClose: handleClose,\n    overlay: cardOverlay,\n    overlayEnabled: cardOverlayEnabled,\n    shadowEnabled: cardShadowEnabled,\n    onTransition: handleTransition,\n    onGestureBegin: handleGestureBegin,\n    onGestureCanceled: handleGestureCanceled,\n    onGestureEnd: handleGestureEnd,\n    gestureEnabled: index === 0 ? false : gestureEnabled,\n    gestureResponseDistance: gestureResponseDistance,\n    gestureVelocityImpact: gestureVelocityImpact,\n    transitionSpec: transitionSpec,\n    styleInterpolator: cardStyleInterpolator,\n    accessibilityElementsHidden: !focused,\n    importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',\n    pointerEvents: active ? 'box-none' : pointerEvents,\n    pageOverflowEnabled: headerMode !== 'float' && presentation !== 'modal',\n    headerDarkContent: headerDarkContent,\n    containerStyle: hasAbsoluteFloatHeader && headerMode !== 'screen' ? {\n      marginTop: headerHeight\n    } : null,\n    contentStyle: [{\n      backgroundColor: presentation === 'transparentModal' ? 'transparent' : colors.background\n    }, cardStyle],\n    style: [{\n      overflow: active ? undefined : 'hidden',\n      display:\n      animationEnabled === false && isNextScreenTransparent === false && detachCurrentScreen !== false && !focused ? 'none' : 'flex'\n    }, StyleSheet.absoluteFill]\n  }, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(ModalPresentationContext.Provider, {\n    value: modal\n  }, React.createElement(View, {\n    style: styles.scene\n  }, React.createElement(HeaderBackContext.Provider, {\n    value: headerBack\n  }, React.createElement(HeaderShownContext.Provider, {\n    value: isParentHeaderShown || headerShown !== false\n  }, React.createElement(HeaderHeightContext.Provider, {\n    value: headerShown ? headerHeight : parentHeaderHeight != null ? parentHeaderHeight : 0\n  }, renderScene({\n    route: scene.descriptor.route\n  }))))), headerMode !== 'float' ? renderHeader({\n    mode: 'screen',\n    layout: layout,\n    scenes: [previousScene, scene],\n    getPreviousScene: getPreviousScene,\n    getFocusedRoute: getFocusedRoute,\n    onContentHeightChange: onHeaderHeightChange\n  }) : null)));\n}\nexport default React.memo(CardContainer);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse'\n  },\n  scene: {\n    flex: 1\n  }\n});","map":{"version":3,"mappings":"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","names":["getHeaderTitle","HeaderBackContext","HeaderHeightContext","HeaderShownContext","useTheme","React","ModalPresentationContext","useKeyboardManager","Card","EPSILON","CardContainer","interpolationIndex","_ref","index","active","closing","gesture","focused","modal","getPreviousScene","getFocusedRoute","headerDarkContent","hasAbsoluteFloatHeader","headerHeight","onHeaderHeightChange","isParentHeaderShown","isNextScreenTransparent","detachCurrentScreen","layout","onCloseRoute","onOpenRoute","onGestureCancel","onGestureEnd","onGestureStart","onTransitionEnd","onTransitionStart","renderHeader","renderScene","safeAreaInsetBottom","safeAreaInsetLeft","safeAreaInsetRight","safeAreaInsetTop","scene","parentHeaderHeight","useContext","useCallback","descriptor","options","navigation","isFocused","keyboardHandlingEnabled","onPageChangeStart","onPageChangeCancel","onPageChangeConfirm","handleOpen","route","handleClose","handleGestureBegin","handleGestureCanceled","handleGestureEnd","handleTransition","_ref2","insets","top","right","bottom","left","colors","useState","pointerEvents","setPointerEvents","useEffect","listener","progress","next","_scene$progress$next","addListener","_scene$progress$next$","value","_ref3","_scene$progress$next2","removeListener","_scene$progress$next3","presentation","animationEnabled","cardOverlay","cardOverlayEnabled","cardShadowEnabled","cardStyle","cardStyleInterpolator","gestureDirection","gestureEnabled","gestureResponseDistance","gestureVelocityImpact","headerMode","headerShown","transitionSpec","previousScene","backTitle","name","headerBack","useMemo","undefined","title","current","onOpen","onClose","overlay","overlayEnabled","shadowEnabled","onTransition","onGestureBegin","onGestureCanceled","styleInterpolator","accessibilityElementsHidden","importantForAccessibility","pageOverflowEnabled","containerStyle","marginTop","contentStyle","backgroundColor","background","style","overflow","display","StyleSheet","absoluteFill","View","styles","container","Provider","mode","scenes","onContentHeightChange","memo","create","flex","flexDirection"],"sourceRoot":"../../src","sources":["CardContainer.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}