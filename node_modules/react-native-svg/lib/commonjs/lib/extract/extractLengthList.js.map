{"version":3,"names":["spaceReg","commaReg","extractLengthList","lengthList","Array","isArray","map","el","String","trim","replace","split"],"sources":["extractLengthList.ts"],"sourcesContent":["import { NumberProp } from './types';\n\nconst spaceReg = /\\s+/;\nconst commaReg = /,/g;\n\nexport default function extractLengthList(\n  lengthList?: readonly NumberProp[] | NumberProp,\n): string[] {\n  if (Array.isArray(lengthList)) {\n    return lengthList.map((el) => String(el));\n  } else if (typeof lengthList === 'number') {\n    return [String(lengthList)];\n  } else if (typeof lengthList === 'string') {\n    return lengthList.trim().replace(commaReg, ' ').split(spaceReg);\n  } else {\n    return [];\n  }\n}\n"],"mappings":"wGAEA,GAAMA,SAAQ,CAAG,KAAK,CACtB,GAAMC,SAAQ,CAAG,IAAI,CAEN,QAASC,kBAAiB,CACvCC,UAA+C,CACrC,CACV,GAAIC,KAAK,CAACC,OAAO,CAACF,UAAU,CAAC,CAAE,CAC7B,MAAOA,WAAU,CAACG,GAAG,CAAC,SAACC,EAAE,QAAKC,OAAM,CAACD,EAAE,CAAC,GAAC,CAC3C,CAAC,IAAM,IAAI,MAAOJ,WAAU,GAAK,QAAQ,CAAE,CACzC,MAAO,CAACK,MAAM,CAACL,UAAU,CAAC,CAAC,CAC7B,CAAC,IAAM,IAAI,MAAOA,WAAU,GAAK,QAAQ,CAAE,CACzC,MAAOA,WAAU,CAACM,IAAI,EAAE,CAACC,OAAO,CAACT,QAAQ,CAAE,GAAG,CAAC,CAACU,KAAK,CAACX,QAAQ,CAAC,CACjE,CAAC,IAAM,CACL,MAAO,EAAE,CACX,CACF"}