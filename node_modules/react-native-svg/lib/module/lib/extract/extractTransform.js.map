{"version":3,"names":["appendTransformProps","props","x","y","originX","originY","scaleX","scaleY","rotation","skewX","skewY","appendTransform","universal2axis","universal","axisX","axisY","defaultValue","coords","split","length","Array","isArray","isNaN","transformsArrayToProps","transformObjectsArray","forEach","transformObject","keys","Object","console","error","key","value","props2transform","extractedProps","translate","translateX","translateY","origin","scale","skew","warn","tr","or","sc","sk","transformToMatrix","transform","reset","columnMatrix","append","transformProps","t","parse","e","toArray","extractTransform","identity"],"sources":["extractTransform.ts"],"sourcesContent":["import { TransformsStyle } from 'react-native';\nimport { append, appendTransform, identity, reset, toArray } from '../Matrix2D';\nimport { parse } from './transform';\nimport {\n  ColumnMajorTransformMatrix,\n  NumberProp,\n  TransformedProps,\n  TransformProps,\n} from './types';\n\nfunction appendTransformProps(props: TransformedProps) {\n  const { x, y, originX, originY, scaleX, scaleY, rotation, skewX, skewY } =\n    props;\n  appendTransform(\n    x + originX,\n    y + originY,\n    scaleX,\n    scaleY,\n    rotation,\n    skewX,\n    skewY,\n    originX,\n    originY,\n  );\n}\n\nfunction universal2axis(\n  universal: NumberProp | NumberProp[] | undefined,\n  axisX: NumberProp | void,\n  axisY: NumberProp | void,\n  defaultValue?: number,\n): [number, number] {\n  let x;\n  let y;\n  if (typeof universal === 'number') {\n    x = y = universal;\n  } else if (typeof universal === 'string') {\n    const coords = universal.split(/\\s*,\\s*/);\n    if (coords.length === 2) {\n      x = +coords[0];\n      y = +coords[1];\n    } else if (coords.length === 1) {\n      x = y = +coords[0];\n    }\n  } else if (Array.isArray(universal)) {\n    if (universal.length === 2) {\n      x = +universal[0];\n      y = +universal[1];\n    } else if (universal.length === 1) {\n      x = y = +universal[0];\n    }\n  }\n\n  axisX = +axisX;\n  if (!isNaN(axisX)) {\n    x = axisX;\n  }\n\n  axisY = +axisY;\n  if (!isNaN(axisY)) {\n    y = axisY;\n  }\n\n  return [x || defaultValue || 0, y || defaultValue || 0];\n}\n\nexport function transformsArrayToProps(\n  transformObjectsArray: TransformsStyle['transform'],\n) {\n  const props: TransformProps = {};\n  transformObjectsArray?.forEach((transformObject) => {\n    const keys = Object.keys(transformObject);\n    if (keys.length !== 1) {\n      console.error(\n        'You must specify exactly one property per transform object.',\n      );\n    }\n    const key = keys[0] as keyof TransformProps;\n    const value = transformObject[key as keyof typeof transformObject];\n    props[key] = value;\n  });\n  return props;\n}\n\nexport function props2transform(\n  props: TransformProps | undefined,\n): TransformedProps | null {\n  if (!props) {\n    return null;\n  }\n  const extractedProps = Array.isArray(props)\n    ? transformsArrayToProps(props)\n    : props;\n  const {\n    rotation,\n    translate,\n    translateX,\n    translateY,\n    origin,\n    originX,\n    originY,\n    scale,\n    scaleX,\n    scaleY,\n    skew,\n    skewX,\n    skewY,\n    x,\n    y,\n  } = extractedProps;\n  if (\n    rotation == null &&\n    translate == null &&\n    translateX == null &&\n    translateY == null &&\n    origin == null &&\n    originX == null &&\n    originY == null &&\n    scale == null &&\n    scaleX == null &&\n    scaleY == null &&\n    skew == null &&\n    skewX == null &&\n    skewY == null &&\n    x == null &&\n    y == null\n  ) {\n    return null;\n  }\n\n  if (Array.isArray(x) || Array.isArray(y)) {\n    console.warn(\n      'Passing SvgLengthList to x or y attribute where SvgLength expected',\n    );\n  }\n  const tr = universal2axis(\n    translate,\n    translateX || (Array.isArray(x) ? x[0] : x),\n    translateY || (Array.isArray(y) ? y[0] : y),\n  );\n  const or = universal2axis(origin, originX, originY);\n  const sc = universal2axis(scale, scaleX, scaleY, 1);\n  const sk = universal2axis(skew, skewX, skewY);\n\n  return {\n    rotation: rotation == null ? 0 : +rotation || 0,\n    originX: or[0],\n    originY: or[1],\n    scaleX: sc[0],\n    scaleY: sc[1],\n    skewX: sk[0],\n    skewY: sk[1],\n    x: tr[0],\n    y: tr[1],\n  };\n}\n\nexport function transformToMatrix(\n  props: TransformedProps | null,\n  transform: TransformProps['transform'],\n): ColumnMajorTransformMatrix | null {\n  if (!props && !transform) {\n    return null;\n  }\n  reset();\n  props && appendTransformProps(props);\n\n  if (transform) {\n    if (Array.isArray(transform)) {\n      if (typeof transform[0] === 'number') {\n        const columnMatrix = transform as ColumnMajorTransformMatrix;\n        append(\n          columnMatrix[0],\n          columnMatrix[1],\n          columnMatrix[2],\n          columnMatrix[3],\n          columnMatrix[4],\n          columnMatrix[5],\n        );\n      } else {\n        const transformProps = props2transform(\n          transformsArrayToProps(transform as TransformsStyle['transform']),\n        );\n        transformProps && appendTransformProps(transformProps);\n      }\n    } else if (typeof transform === 'string') {\n      try {\n        const t = parse(transform);\n        append(t[0], t[3], t[1], t[4], t[2], t[5]);\n      } catch (e) {\n        console.error(e);\n      }\n    } else {\n      const transformProps = props2transform(transform);\n      transformProps && appendTransformProps(transformProps);\n    }\n  }\n\n  return toArray();\n}\n\nexport default function extractTransform(\n  props: TransformProps | TransformProps['transform'],\n): ColumnMajorTransformMatrix | null {\n  if (Array.isArray(props) && typeof props[0] === 'number') {\n    return props as ColumnMajorTransformMatrix;\n  }\n  if (typeof props === 'string') {\n    try {\n      const t = parse(props);\n      return [t[0], t[3], t[1], t[4], t[2], t[5]];\n    } catch (e) {\n      console.error(e);\n      return identity;\n    }\n  }\n  // this type is not correct since props can be of type TransformsStyle['transform'] too\n  // but it satisfies TS and should not produce any type errors\n  const transformProps = props as TransformProps;\n  return transformToMatrix(\n    props2transform(transformProps),\n    transformProps?.transform,\n  );\n}\n"],"mappings":"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"}