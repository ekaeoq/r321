{"version":3,"names":["spacesRegExp","SvgImage","props","preserveAspectRatio","x","y","width","height","xlinkHref","href","modes","trim","split","align","meetOrSlice","stringifiedImageProps","stringifyPropsForFabric","imageProps","meetOrSliceTypes","alignEnum","src","Image","resolveAssetSource","uri","ref","refMethod","withoutXY","Shape"],"sources":["Image.tsx"],"sourcesContent":["import React from 'react';\nimport { Image, ImageProps as RNImageProps, NativeMethods } from 'react-native';\nimport { alignEnum, meetOrSliceTypes } from '../lib/extract/extractViewBox';\nimport {\n  stringifyPropsForFabric,\n  withoutXY,\n} from '../lib/extract/extractProps';\nimport {\n  ClipProps,\n  CommonMaskProps,\n  NativeProps,\n  NumberProp,\n  ResponderProps,\n  TouchableProps,\n} from '../lib/extract/types';\nimport Shape from './Shape';\nimport { RNSVGImage } from '../ReactNativeSVG';\n\nconst spacesRegExp = /\\s+/;\n\nexport interface ImageProps\n  extends ResponderProps,\n    CommonMaskProps,\n    ClipProps,\n    TouchableProps,\n    NativeProps {\n  x?: NumberProp;\n  y?: NumberProp;\n  width?: NumberProp;\n  height?: NumberProp;\n  xlinkHref?: RNImageProps['source'] | string;\n  href?: RNImageProps['source'] | string;\n  preserveAspectRatio?: string;\n  opacity?: NumberProp;\n  clipPath?: string;\n  id?: string;\n}\n\nexport default class SvgImage extends Shape<ImageProps> {\n  static displayName = 'Image';\n\n  static defaultProps = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n    preserveAspectRatio: 'xMidYMid meet',\n  };\n\n  render() {\n    const { props } = this;\n    const {\n      preserveAspectRatio,\n      x,\n      y,\n      width,\n      height,\n      xlinkHref,\n      href = xlinkHref,\n    } = props;\n    const modes = preserveAspectRatio\n      ? preserveAspectRatio.trim().split(spacesRegExp)\n      : [];\n    const align = modes[0];\n    const meetOrSlice: 'meet' | 'slice' | 'none' | string | undefined =\n      modes[1];\n    const stringifiedImageProps = stringifyPropsForFabric({\n      x,\n      y,\n      width,\n      height,\n    });\n    const imageProps = {\n      ...stringifiedImageProps,\n      meetOrSlice: meetOrSliceTypes[meetOrSlice] || 0,\n      align: alignEnum[align] || 'xMidYMid',\n      src: !href\n        ? null\n        : Image.resolveAssetSource(\n            typeof href === 'string' ? { uri: href } : href,\n          ),\n    };\n    return (\n      <RNSVGImage\n        ref={(ref) => this.refMethod(ref as (SvgImage & NativeMethods) | null)}\n        {...withoutXY(this, props)}\n        {...imageProps}\n      />\n    );\n  }\n}\n"],"mappings":"2yBAAA,oDACA,yCACA,6DACA,yDAYA,uDACA,iDAA+C,szBAE/C,GAAMA,aAAY,CAAG,KAAK,CAAC,GAoBNC,SAAQ,yPAW3B,iBAAS,gBACP,GAAQC,MAAK,CAAK,IAAI,CAAdA,KAAK,CACb,GACEC,oBAAmB,CAOjBD,KAAK,CAPPC,mBAAmB,CACnBC,CAAC,CAMCF,KAAK,CANPE,CAAC,CACDC,CAAC,CAKCH,KAAK,CALPG,CAAC,CACDC,KAAK,CAIHJ,KAAK,CAJPI,KAAK,CACLC,MAAM,CAGJL,KAAK,CAHPK,MAAM,CACNC,SAAS,CAEPN,KAAK,CAFPM,SAAS,aAEPN,KAAK,CADPO,IAAI,CAAJA,IAAI,sBAAGD,SAAS,aAElB,GAAME,MAAK,CAAGP,mBAAmB,CAC7BA,mBAAmB,CAACQ,IAAI,EAAE,CAACC,KAAK,CAACZ,YAAY,CAAC,CAC9C,EAAE,CACN,GAAMa,MAAK,CAAGH,KAAK,CAAC,CAAC,CAAC,CACtB,GAAMI,YAA2D,CAC/DJ,KAAK,CAAC,CAAC,CAAC,CACV,GAAMK,sBAAqB,CAAG,GAAAC,qCAAuB,EAAC,CACpDZ,CAAC,CAADA,CAAC,CACDC,CAAC,CAADA,CAAC,CACDC,KAAK,CAALA,KAAK,CACLC,MAAM,CAANA,MACF,CAAC,CAAC,CACF,GAAMU,WAAU,kBACXF,qBAAqB,EACxBD,WAAW,CAAEI,gCAAgB,CAACJ,WAAW,CAAC,EAAI,CAAC,CAC/CD,KAAK,CAAEM,yBAAS,CAACN,KAAK,CAAC,EAAI,UAAU,CACrCO,GAAG,CAAE,CAACX,IAAI,CACN,IAAI,CACJY,kBAAK,CAACC,kBAAkB,CACtB,MAAOb,KAAI,GAAK,QAAQ,CAAG,CAAEc,GAAG,CAAEd,IAAK,CAAC,CAAGA,IAAI,CAChD,EACN,CACD,MACE,8BAAC,0BAAU,wBACT,GAAG,CAAE,aAACe,IAAG,QAAK,MAAI,CAACC,SAAS,CAACD,IAAG,CAAsC,EAAC,EACnE,GAAAE,uBAAS,EAAC,IAAI,CAAExB,KAAK,CAAC,CACtBe,UAAU,8EACd,CAEN,CAAC,sBAnDmCU,eAAK,wDAAtB1B,QAAQ,eACN,OAAO,+BADTA,QAAQ,gBAGL,CACpBG,CAAC,CAAE,CAAC,CACJC,CAAC,CAAE,CAAC,CACJC,KAAK,CAAE,CAAC,CACRC,MAAM,CAAE,CAAC,CACTJ,mBAAmB,CAAE,eACvB,CAAC"}